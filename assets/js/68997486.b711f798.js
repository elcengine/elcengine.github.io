"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[4156],{6223:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>r});var n=s(4848),a=s(8453);const i={sidebar_position:2},c="Switching Databases",o={id:"cross-connection-queries/switching-databases",title:"Switching Databases",description:"The Elemental ORM allows you to switch between different databases in the middle of a query. This is useful when you have multiple databases and you need to query data from both.",source:"@site/docs/cross-connection-queries/switching-databases.md",sourceDirName:"cross-connection-queries",slug:"/cross-connection-queries/switching-databases",permalink:"/docs/cross-connection-queries/switching-databases",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/cross-connection-queries/switching-databases.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docSidebar",previous:{title:"Switching Connections",permalink:"/docs/cross-connection-queries/switching-connections"},next:{title:"Switching Collections",permalink:"/docs/cross-connection-queries/switching-collections"}},d={},r=[{value:"Switching Databases and Collections",id:"switching-databases-and-collections",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"switching-databases",children:"Switching Databases"}),"\n",(0,n.jsx)(t.p,{children:"The Elemental ORM allows you to switch between different databases in the middle of a query. This is useful when you have multiple databases and you need to query data from both."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",children:'witchers := WitcherModel.Find().SetDatabase("secondary-database").Exec().([]Witcher)\n'})}),"\n",(0,n.jsxs)(t.p,{children:["In the example above, we are switching the database to ",(0,n.jsx)(t.code,{children:"secondary-database"})," before executing the query. This will ensure that the query is executed on the ",(0,n.jsx)(t.code,{children:"secondary-database"})," database."]}),"\n",(0,n.jsx)(t.h2,{id:"switching-databases-and-collections",children:"Switching Databases and Collections"}),"\n",(0,n.jsx)(t.p,{children:"You can also switch both the collection and the database in the middle of a query."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",children:'witchers := WitcherModel.Find().SetDatabase("secondary-database").SetCollection("secondary-collection").Exec().([]Witcher)\n'})}),"\n",(0,n.jsxs)(t.p,{children:["In the example above, we are switching the database to ",(0,n.jsx)(t.code,{children:"secondary-database"})," and the collection to ",(0,n.jsx)(t.code,{children:"secondary-collection"})," before executing the query. This will ensure that the query is executed on the ",(0,n.jsx)(t.code,{children:"secondary-database"})," database and the ",(0,n.jsx)(t.code,{children:"secondary-collection"})," collection."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c});var n=s(6540);const a={},i=n.createContext(a);function c(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}}}]);