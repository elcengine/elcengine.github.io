"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[8554],{5710:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var n=t(4848),s=t(8453);const r={sidebar_position:12},o="In",d={id:"querybuilder/in",title:"In",description:"The In method is chained to the Where method and is used to filter the results of a query to only include documents where the specified field is equal to one of the specified values.",source:"@site/docs/querybuilder/in.md",sourceDirName:"querybuilder",slug:"/querybuilder/in",permalink:"/docs/querybuilder/in",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/querybuilder/in.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"docSidebar",previous:{title:"Exists",permalink:"/docs/querybuilder/exists"},next:{title:"Not In",permalink:"/docs/querybuilder/not-in"}},c={},l=[{value:"Usage",id:"usage",level:2}];function u(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"in",children:"In"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"In"})," method is chained to the ",(0,n.jsx)(i.code,{children:"Where"})," method and is used to filter the results of a query to only include documents where the specified field is equal to one of the specified values."]}),"\n",(0,n.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-go",children:'witchers := WitcherModel.Where("age").In(50, 51, 52).Exec().([]Witcher)\n'})}),"\n",(0,n.jsx)(i.p,{children:"In the example above, we are filtering the results to only include witchers whose age is 50, 51, or 52.13"})]})}function a(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>o});var n=t(6540);const s={},r=n.createContext(s);function o(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}}}]);