"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[7752],{51:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>d,metadata:()=>o,toc:()=>c});var t=i(4848),s=i(8453);const d={sidebar_position:14},a="Find One And Replace",o={id:"queries/find-one-and-replace",title:"Find One And Replace",description:"The FindOneAndReplace method is used to find a single document in the database by the given filter and replace it.",source:"@site/docs/queries/find-one-and-replace.md",sourceDirName:"queries",slug:"/queries/find-one-and-replace",permalink:"/docs/queries/find-one-and-replace",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/queries/find-one-and-replace.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"docSidebar",previous:{title:"Distinct",permalink:"/docs/queries/distinct"},next:{title:"Find By ID And Replace",permalink:"/docs/queries/find-by-id-and-replace"}},r={},c=[{value:"Usage",id:"usage",level:2},{value:"Usage with Options",id:"usage-with-options",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"find-one-and-replace",children:"Find One And Replace"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"FindOneAndReplace"})," method is used to find a single document in the database by the given filter and replace it."]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'witcher := WitcherModel.FindOneAndReplace(primitive.m{"name": "Geralt"}, Witcher{\n    Name: "Eskel",\n    Age: 100,\n}).ExecPtr()\n'})}),"\n",(0,t.jsx)(n.p,{children:'The example above finds the witcher with the name "Geralt" and replaces it with a new document with the name "Eskel" and age 100.'}),"\n",(0,t.jsx)(n.h2,{id:"usage-with-options",children:"Usage with Options"}),"\n",(0,t.jsxs)(n.p,{children:["You can pass options to the ",(0,t.jsx)(n.code,{children:"FindOneAndReplace"})," method to specify how the replace operation should be performed."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'opts := options.FindOneAndReplaceOptions{}\nopts.SetByPassDocumentValidation(true)\nwitcher := WitcherModel.FindOneAndReplace(primitive.m{"name": "Geralt"}, Witcher{\n    Name: "Eskel",\n    Age: 100,\n}, &opts).ExecPtr()\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, we are passing options to the ",(0,t.jsx)(n.code,{children:"FindOneAndReplace"})," method to bypass document validation during the replace operation."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a});var t=i(6540);const s={},d=t.createContext(s);function a(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}}}]);