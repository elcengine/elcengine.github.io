"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[9934],{3454:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});var o=t(4848),i=t(8453);const c={sidebar_position:3},s="Listening to Connection Events",r={id:"getting-started/listening-to-connection-events",title:"Listening to Connection Events",description:"Elemental provides a way to listen to connection pool events such as ConnectionCreated, ConnectionReady, and ConnectionClosedin a much more user-friendly way.",source:"@site/docs/getting-started/listening-to-connection-events.md",sourceDirName:"getting-started",slug:"/getting-started/listening-to-connection-events",permalink:"/docs/getting-started/listening-to-connection-events",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/getting-started/listening-to-connection-events.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docSidebar",previous:{title:"Creating a Connection",permalink:"/docs/getting-started/creating-a-connection"},next:{title:"Create a Schema",permalink:"/docs/getting-started/create-a-schema"}},l={},a=[{value:"Unsubscribe from Connection Events",id:"unsubscribe-from-connection-events",level:2},{value:"Override the default Elemental pool monitor",id:"override-the-default-elemental-pool-monitor",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"listening-to-connection-events",children:"Listening to Connection Events"}),"\n",(0,o.jsxs)(e.p,{children:["Elemental provides a way to listen to connection pool events such as ",(0,o.jsx)(e.code,{children:"ConnectionCreated"}),", ",(0,o.jsx)(e.code,{children:"ConnectionReady"}),", and ",(0,o.jsx)(e.code,{children:"ConnectionClosed"}),"in a much more user-friendly way."]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Listens to the ",(0,o.jsx)(e.code,{children:"ConnectionCreated"})," event of the default connection"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'e_connection.On("ConnectionCreated", func(alias string) {\n  fmt.Println("Connection created for", alias)\n})\n'})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Listens to the ",(0,o.jsx)(e.code,{children:"ConnectionCreated"})," event of a specific connection"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'e_connection.On("ConnectionCreated", func(alias string) {\n  fmt.Println("Connection created for", alias)\n}, "my-connection")\n'})}),"\n",(0,o.jsx)(e.h2,{id:"unsubscribe-from-connection-events",children:"Unsubscribe from Connection Events"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Unsubscribes from the ",(0,o.jsx)(e.code,{children:"ConnectionCreated"})," event of the default connection"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'e_connection.Off("ConnectionCreated")\n'})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Unsubscribes from the ",(0,o.jsx)(e.code,{children:"ConnectionCreated"})," event of a specific connection"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'e_connection.Off("ConnectionCreated", "my-connection")\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsxs)(e.strong,{children:["For a full list of supported events, refer ",(0,o.jsx)(e.a,{href:"https://pkg.go.dev/go.mongodb.org/mongo-driver/event",children:"this page"}),"."]})}),"\n",(0,o.jsx)(e.h2,{id:"override-the-default-elemental-pool-monitor",children:"Override the default Elemental pool monitor"}),"\n",(0,o.jsx)(e.p,{children:"Elemental adds a default pool monitor to the connection pool to listen to connection events. You can override this monitor with your own custom monitor by providing one when creating a connection."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'poolMonitor := &event.PoolMonitor{\n  Event: func(evt *event.PoolEvent) {\n    fmt.Println("Pool event:", evt)\n  },\n}\nclient := e_connection.Connect(e_connection.ConnectionOptions{\n  URI: "mongodb://localhost:27017",\n  PoolMonitor: poolMonitor,\n})\n'})})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>r});var o=t(6540);const i={},c=o.createContext(i);function s(n){const e=o.useContext(c);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),o.createElement(c.Provider,{value:e},n.children)}}}]);