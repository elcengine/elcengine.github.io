"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[3271],{1932:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=n(4848),i=n(8453);const s={sidebar_position:1},c="Create",a={id:"queries/create",title:"Create",description:"The Create method is used to insert a single document into a collection.",source:"@site/docs/queries/create.md",sourceDirName:"queries",slug:"/queries/create",permalink:"/docs/queries/create",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/queries/create.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docSidebar",previous:{title:"Basic Operations",permalink:"/docs/category/basic-operations"},next:{title:"Create Many",permalink:"/docs/queries/create-many"}},o={},d=[{value:"Usage",id:"usage",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"create",children:"Create"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"Create"})," method is used to insert a single document into a collection."]}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'witcher := WitcherModel.Create(Witcher{\n\tName:       "Geralt of Rivia",\n\tAge:        100,\n\tOccupation: "Witcher",\n\tWeapons:    []string{"Silver Sword", "Steel Sword"},\n\tRetired:    false,\n\tSchool:     nil\n}).ExecT()\n\nfmt.Println(witcher.ID) // The ObjectID of the newly created document\nfmt.Println(witcher.CreatedAt) // The timestamp when the document was created\nfmt.Println(witcher.UpdatedAt) // The timestamp when the document was last updated\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c});var r=n(6540);const i={},s=r.createContext(i);function c(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}}}]);