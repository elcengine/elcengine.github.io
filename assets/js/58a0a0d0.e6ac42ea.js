"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[8604],{3198:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>u,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=i(4848),r=i(8453);const o={sidebar_position:3},u="Multiply",l={id:"querybuilder/update-operations/multiply",title:"Multiply",description:"The Mul method can be chained to a query to multiply the value of a field in the documents that match the query.",source:"@site/docs/querybuilder/update-operations/multiply.md",sourceDirName:"querybuilder/update-operations",slug:"/querybuilder/update-operations/multiply",permalink:"/docs/querybuilder/update-operations/multiply",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/querybuilder/update-operations/multiply.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docSidebar",previous:{title:"Decrement",permalink:"/docs/querybuilder/update-operations/decrement"},next:{title:"Divide",permalink:"/docs/querybuilder/update-operations/divide"}},a={},s=[{value:"Usage",id:"usage",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"multiply",children:"Multiply"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"Mul"})," method can be chained to a query to multiply the value of a field in the documents that match the query."]}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",children:'result := WitcherModel.Where("name", "Vesemir").Mul("age", 2).Exec().(*mongo.UpdateResult)\n'})}),"\n",(0,n.jsx)(t.p,{children:"In the example above, we are multiplying the age of the witcher named Vesemir by 2."})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>u});var n=i(6540);const r={},o=n.createContext(r);function u(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}}}]);