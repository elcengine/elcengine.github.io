"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[5524],{2304:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=t(4848),d=t(8453);const s={sidebar_position:17},r="Find One And Delete",o={id:"queries/find-one-and-delete",title:"Find One And Delete",description:"The FindOneAndDelete method is used to find a single document and delete it from a collection.",source:"@site/docs/queries/find-one-and-delete.md",sourceDirName:"queries",slug:"/queries/find-one-and-delete",permalink:"/docs/queries/find-one-and-delete",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/queries/find-one-and-delete.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"docSidebar",previous:{title:"Rename",permalink:"/docs/queries/rename"},next:{title:"Find By ID And Delete",permalink:"/docs/queries/find-by-id-and-delete"}},a={},c=[{value:"Usage",id:"usage",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"find-one-and-delete",children:"Find One And Delete"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"FindOneAndDelete"})," method is used to find a single document and delete it from a collection."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'witcher := WitcherModel.FindOneAndDelete(primitive.M{"name": "Vesemir"}).ExecPtr()\n'})}),"\n",(0,i.jsx)(n.p,{children:'The example above finds a single witcher with the name "Vesemir" and deletes it from the database. The method returns the document as it was before the deletion.'})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r});var i=t(6540);const d={},s=i.createContext(d);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}}}]);