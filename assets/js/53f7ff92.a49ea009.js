"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[6323],{7206:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>r});var i=t(4848),s=t(8453);const o={sidebar_position:1},d="Creating Indexes",a={id:"indexing/creating-indexes",title:"Creating Indexes",description:"Indexes can be defined within a Schema under the Index field. This field accepts the original MongoDB index options under the options.IndexOptions type.",source:"@site/docs/indexing/creating-indexes.md",sourceDirName:"indexing",slug:"/indexing/creating-indexes",permalink:"/docs/indexing/creating-indexes",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/indexing/creating-indexes.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docSidebar",previous:{title:"Indexing",permalink:"/docs/category/indexing"},next:{title:"Syncing Indexes",permalink:"/docs/indexing/syncing-indexes"}},c={},r=[];function l(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"creating-indexes",children:"Creating Indexes"}),"\n",(0,i.jsxs)(n.p,{children:["Indexes can be defined within a Schema under the ",(0,i.jsx)(n.code,{children:"Index"})," field. This field accepts the original MongoDB index options under the ",(0,i.jsx)(n.code,{children:"options.IndexOptions"})," type."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'unique := true\nschema := elemental.NewSchema(map[string]elemental.Field{\n\t"Vitality": {\n\t\tType:     reflect.Int,\n\t\tRequired: true,\n\t\tIndex: options.IndexOptions{\n\t\t\tUnique: &unique,\n\t\t},\n\t},\n}, elemental.SchemaOptions{\n\tCollection: "alghouls",\n})\n'})}),"\n",(0,i.jsx)(n.p,{children:"Elemental will automatically create the index when the schema is created."}),"\n",(0,i.jsx)(n.p,{children:"If you need to create an index after the schema has been created, you can always use the traditional way supported by the MongoDB driver."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'indexModel := mongo.IndexModel{\n    Keys: bson.D{{"Vitality", 1}},\n    Options: options.Index().SetUnique(true),\n}\ne_connection.UseDefault().Collection("alghouls").Indexes().CreateOne(context.Background(), indexModel)\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>a});var i=t(6540);const s={},o=i.createContext(s);function d(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);