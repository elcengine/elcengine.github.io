"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[6004],{2420:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>s,contentTitle:()=>u,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=t(4848),r=t(8453);const a={sidebar_position:5},u="Minimum",o={id:"querybuilder/update-operations/minimum",title:"Minimum",description:"The Min method can be chained to a query to update the value of a field if the new value is less than the current value.",source:"@site/docs/querybuilder/update-operations/minimum.md",sourceDirName:"querybuilder/update-operations",slug:"/querybuilder/update-operations/minimum",permalink:"/docs/querybuilder/update-operations/minimum",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/querybuilder/update-operations/minimum.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docSidebar",previous:{title:"Divide",permalink:"/docs/querybuilder/update-operations/divide"},next:{title:"Maximum",permalink:"/docs/querybuilder/update-operations/maximum"}},s={},d=[{value:"Usage",id:"usage",level:2}];function c(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"minimum",children:"Minimum"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"Min"})," method can be chained to a query to update the value of a field if the new value is less than the current value."]}),"\n",(0,n.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-go",children:'result := WitcherModel.Where("name", "Vesemir").Min("age", 50).Exec().(*mongo.UpdateResult)\n'})}),"\n",(0,n.jsx)(i.p,{children:"In the example above, we are updating the age of the witcher named Vesemir to 50 if the current age is greater than 50."})]})}function l(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>u});var n=t(6540);const r={},a=n.createContext(r);function u(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}}}]);