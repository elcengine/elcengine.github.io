"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[4906],{4017:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var l=i(4848),t=i(8453);const o={sidebar_position:1},a="Init",r={id:"cli/commands/init",title:"Init",description:"Initializes a new default configuration file for the Elemental CLI.",source:"@site/docs/cli/commands/init.md",sourceDirName:"cli/commands",slug:"/cli/commands/init",permalink:"/docs/cli/commands/init",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/cli/commands/init.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docSidebar",previous:{title:"Commands",permalink:"/docs/category/commands"},next:{title:"Migrate",permalink:"/docs/cli/commands/migrate"}},s={},c=[{value:"The configuration file",id:"the-configuration-file",level:2},{value:"Example configuration file",id:"example-configuration-file",level:2},{value:"Environment variables",id:"environment-variables",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"init",children:"Init"}),"\n",(0,l.jsx)(n.p,{children:"Initializes a new default configuration file for the Elemental CLI."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"elemental init\n"})}),"\n",(0,l.jsx)(n.p,{children:"You can also specify a MongoDB connection string as an argument to the command. This will be used as the connection string in the configuration file."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"elemental init mongodb://localhost:27017\n"})}),"\n",(0,l.jsx)(n.h2,{id:"the-configuration-file",children:"The configuration file"}),"\n",(0,l.jsx)(n.p,{children:"The elemental config file is a YAML or JSON file with one of the following names:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:".elementalrc"}),"\n",(0,l.jsx)(n.li,{children:".elemental.yaml"}),"\n",(0,l.jsx)(n.li,{children:".elemental.yml"}),"\n",(0,l.jsx)(n.li,{children:"elemental.json"}),"\n",(0,l.jsx)(n.li,{children:"elemental.yaml"}),"\n",(0,l.jsx)(n.li,{children:"elemental.yml"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["The default configuration file is ",(0,l.jsx)(n.code,{children:".elementalrc"}),". The configuration file is created in the current working directory when you run the ",(0,l.jsx)(n.code,{children:"elemental init"})," command. If a configuration file already exists, it will not be overwritten."]}),"\n",(0,l.jsx)(n.h2,{id:"example-configuration-file",children:"Example configuration file"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "connection_str": "mongodb://localhost:27017",\n  "migrations_dir": "database/migrations",\n  "seeds_dir": "database/seeds",\n  "changelog_collection": "changelog"\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"environment-variables",children:"Environment variables"}),"\n",(0,l.jsxs)(n.p,{children:["The elemental config file also supports reading from environment variables. For example, you can specify the ",(0,l.jsx)(n.code,{children:"connection_str"})," as ",(0,l.jsx)(n.code,{children:"<DB_CONNECTION_STRING>"})," in the config file, and it will be replaced with the value of the ",(0,l.jsx)(n.code,{children:"DB_CONNECTION_STRING"})," environment variable during runtime."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "connection_str": "<DB_CONNECTION_STRING>"\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["If a ",(0,l.jsx)(n.code,{children:".env"})," file is present in the same directory as the config file, it will pick up the environment variables from there. It also uses the environemnt variable ",(0,l.jsx)(n.code,{children:"APP_ENV"})," to look for .env file variants if specified. If the ",(0,l.jsx)(n.code,{children:"APP_ENV"})," variable is set to ",(0,l.jsx)(n.code,{children:"production"}),", it will look for a ",(0,l.jsx)(n.code,{children:".env.production"})," file. If it is set to ",(0,l.jsx)(n.code,{children:"development"}),", it will look for a ",(0,l.jsx)(n.code,{children:".env.development"})," file. The environment variables are loaded using the ",(0,l.jsx)(n.a,{href:"https://github.com/joho/godotenv",children:(0,l.jsx)(n.strong,{children:"godotenv"})})," package."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a});var l=i(6540);const t={},o=l.createContext(t);function a(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}}}]);