"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[4363],{2947:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>h});var i=s(4848),n=s(8453);const r={sidebar_position:1},c="Is Type",o={id:"querybuilder/type-checks/is-type",title:"Is Type",description:"The IsType method is chained to the Where method and is used to filter the results of a query to only include documents where the specified field is the specified type.",source:"@site/docs/querybuilder/type-checks/is-type.md",sourceDirName:"querybuilder/type-checks",slug:"/querybuilder/type-checks/is-type",permalink:"/docs/querybuilder/type-checks/is-type",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/querybuilder/type-checks/is-type.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docSidebar",previous:{title:"Type Checks",permalink:"/docs/category/type-checks"},next:{title:"Is String",permalink:"/docs/querybuilder/type-checks/is-string"}},d={},h=[{value:"Usage",id:"usage",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"is-type",children:"Is Type"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"IsType"})," method is chained to the ",(0,i.jsx)(t.code,{children:"Where"})," method and is used to filter the results of a query to only include documents where the specified field is the specified type."]}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'witchers := WitcherModel.Where("name").IsType(bson.TypeString).Exec().([]Witcher)\n'})}),"\n",(0,i.jsx)(t.p,{children:"In the example above, we are filtering the results to only include witchers whose name is a string."})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c});var i=s(6540);const n={},r=i.createContext(n);function c(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}}}]);