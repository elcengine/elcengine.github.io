"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[1567],{1272:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>o});var s=t(4848),i=t(8453);const l={sidebar_position:4},r="Create a Schema",c={id:"getting-started/create-a-schema",title:"Create a Schema",description:"Schema creation is a part of the elemental core package which can be imported as follows:",source:"@site/docs/getting-started/create-a-schema.md",sourceDirName:"getting-started",slug:"/getting-started/create-a-schema",permalink:"/docs/getting-started/create-a-schema",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/getting-started/create-a-schema.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docSidebar",previous:{title:"Listening to Connection Events",permalink:"/docs/getting-started/listening-to-connection-events"},next:{title:"Create a Model",permalink:"/docs/getting-started/create-a-model"}},a={},o=[{value:"Schema Fields",id:"schema-fields",level:2},{value:"Schema Options",id:"schema-options",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"create-a-schema",children:"Create a Schema"}),"\n",(0,s.jsxs)(n.p,{children:["Schema creation is a part of the ",(0,s.jsx)(n.code,{children:"elemental"})," core package which can be imported as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'import "github.com/elcengine/elemental/core"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["A schema is a blueprint for your data model. It defines the structure of your data and how it should be stored in the database. In Elemental, you can define a schema using the ",(0,s.jsx)(n.code,{children:"elemental"})," package."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'unique := true\nschema := elemental.NewSchema(map[string]elemental.Field{\n\t"Name": {\n\t\tType:     elemental.String,\n\t\tRequired: true,\n\t\tIndex:    options.Index().SetUnique(true),\n\t},\n\t"Age": {\n\t\tType:    elemental.Int,\n\t\tDefault: DefaultAge,\n\t},\n\t"Occupation": {\n\t\tType: elemental.String,\n\t},\n\t"School": {\n\t\tType: elemental.String,\n\t},\n\t"Weapons": {\n\t\tType:    elemental.Slice,\n\t\tDefault: []string{},\n\t},\n\t"Retired": {\n\t\tType:    elemental.Bool,\n\t\tDefault: false,\n\t},\n}, elemental.SchemaOptions{\n\tCollection: "witchers",\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"schema-fields",children:"Schema Fields"}),"\n",(0,s.jsxs)(n.p,{children:["Each field in a schema is defined by a ",(0,s.jsx)(n.code,{children:"Field"})," struct. The ",(0,s.jsx)(n.code,{children:"Field"})," struct has the following properties:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Type"}),":  The data type of the field. Can be of reflect.Kind, reflect.Type, an Elemental alias such as elemental.String or a custom reflection"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Required"}),": A boolean value that indicates whether the field is required or not."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Default"}),": The default value for the field."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Min"}),": The minimum value for the field."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Max"}),": The maximum value for the field."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Length"}),": The length of the field."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Regex"}),": A regular expression (*regexp.Regexp) that the field must match."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Index"}),": A pointer to an ",(0,s.jsx)(n.code,{children:"IndexOptions"})," struct that defines the indexing options for the field."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"IndexOrder"}),": The order in which the field should be indexed."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Ref"}),": A reference to another schema."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Collection"}),": Used in conjuction with the ",(0,s.jsx)(n.code,{children:"Ref"})," field to specify the collection where the referenced data is stored."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Schema"}),": An Elemental Schema that can be used to define nested schemas."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"schema-options",children:"Schema Options"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Collection"}),": The name of the collection in the database where the data should be stored."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Database"}),": The name of the database where the collection is located."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Connection"}),": The alias of the connection to use for interacting with the database."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"CollectionOptions"}),": The options to use when creating the collection in the database found under the package ",(0,s.jsx)(n.code,{children:"go.mongodb.org/mongo-driver/mongo/options"}),"."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r});var s=t(6540);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}}}]);