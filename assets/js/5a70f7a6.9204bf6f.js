"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[1184],{4772:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var o=t(4848),c=t(8453);const i={sidebar_position:1},s="Switching Connections",a={id:"cross-connection-queries/switching-connections",title:"Switching Connections",description:"The Elemental ORM allows you to switch between different connections in the middle of a query. This is useful when you have multiple connections to different databases and you need to query data from both.",source:"@site/docs/cross-connection-queries/switching-connections.md",sourceDirName:"cross-connection-queries",slug:"/cross-connection-queries/switching-connections",permalink:"/docs/cross-connection-queries/switching-connections",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/cross-connection-queries/switching-connections.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docSidebar",previous:{title:"Cross Connection Queries",permalink:"/docs/category/cross-connection-queries"},next:{title:"Switching Databases",permalink:"/docs/cross-connection-queries/switching-databases"}},r={},d=[{value:"Switching Connections and Databases",id:"switching-connections-and-databases",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"switching-connections",children:"Switching Connections"}),"\n",(0,o.jsx)(n.p,{children:"The Elemental ORM allows you to switch between different connections in the middle of a query. This is useful when you have multiple connections to different databases and you need to query data from both."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'witchers := WitcherModel.Find().SetConnection("my-connection").Exec().([]Witcher)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In the example above, we are switching the connection to ",(0,o.jsx)(n.code,{children:"my-connection"})," before executing the query. This will ensure that the query is executed on the ",(0,o.jsx)(n.code,{children:"my-connection"})," connection."]}),"\n",(0,o.jsx)(n.h2,{id:"switching-connections-and-databases",children:"Switching Connections and Databases"}),"\n",(0,o.jsx)(n.p,{children:"You can also switch both the connection and the database in the middle of a query."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'witchers := WitcherModel.Find().SetConnection("my-connection").SetDatabase("secondary-database").Exec().([]Witcher)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In the example above, we are switching the connection to ",(0,o.jsx)(n.code,{children:"my-connection"})," and the database to ",(0,o.jsx)(n.code,{children:"secondary-database"})," before executing the query. This will ensure that the query is executed on the ",(0,o.jsx)(n.code,{children:"my-connection"})," connection and the ",(0,o.jsx)(n.code,{children:"secondary-database"})," database."]})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const c={},i=o.createContext(c);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);