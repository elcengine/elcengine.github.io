"use strict";(self.webpackChunkelcengine=self.webpackChunkelcengine||[]).push([[6611],{4417:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var o=n(4848),s=n(8453);const i={sidebar_position:10},a="Update Many",d={id:"queries/update-many",title:"Update Many",description:"The UpdateMany method is used to update multiple documents in a collection based on a filter.",source:"@site/docs/queries/update-many.md",sourceDirName:"queries",slug:"/queries/update-many",permalink:"/docs/queries/update-many",draft:!1,unlisted:!1,editUrl:"https://github.com/elcengine/elcengine.github.io/tree/main/docs/docs/queries/update-many.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"docSidebar",previous:{title:"Update By ID",permalink:"/docs/queries/update-by-id"},next:{title:"Upsert",permalink:"/docs/queries/upsert"}},r={},c=[{value:"Usage.",id:"usage",level:2},{value:"Usage with Options",id:"usage-with-options",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"update-many",children:"Update Many"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"UpdateMany"})," method is used to update multiple documents in a collection based on a filter."]}),"\n",(0,o.jsx)(t.h2,{id:"usage",children:"Usage."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",children:'result := WitcherModel.UpdateMany(primitive.M{"school": "Wolf"}, primitive.M{"retired": true}).Exec().(*mongo.UpdateResult)\n'})}),"\n",(0,o.jsxs)(t.p,{children:["The example above finds all witchers from the Wolf school and updates their ",(0,o.jsx)(t.code,{children:"retired"})," field to ",(0,o.jsx)(t.code,{children:"true"}),". The method returns the underlying ",(0,o.jsx)(t.code,{children:"*mongo.UpdateResult"})," object."]}),"\n",(0,o.jsx)(t.h2,{id:"usage-with-options",children:"Usage with Options"}),"\n",(0,o.jsxs)(t.p,{children:["You can pass options to the ",(0,o.jsx)(t.code,{children:"UpdateMany"})," method to specify how the update operation should be performed."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",children:'opts := options.UpdateOptions{}\nopts.SetBypassDocumentValidation(true)\nresult := WitcherModel.UpdateMany(primitive.M{"school": "Wolf"}, primitive.M{"retired": true}, &opts).Exec().(*mongo.UpdateResult)\n'})}),"\n",(0,o.jsxs)(t.p,{children:["In the example above, we are passing options to the ",(0,o.jsx)(t.code,{children:"UpdateMany"})," method to bypass document validation during the update operation."]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>d});var o=n(6540);const s={},i=o.createContext(s);function a(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);